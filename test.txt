Test file whatever blah.
dscskldcdfv
df

#define foo bar
foo
#undef foo
#define foo(x) (x+x)
foo(12345)
"string test"
"quoted \"string\" test"
#undef foo
#define multiarg(x, y, z, butts) \
  (x + x - y + (butts))
#define multiarg(x, y, z, butts  \
  (x + x - y + (butts))
#define multiarg(x, y, z,        \
  (x + x - y + (butts))
#define multiarg(x, y, z         \
  (x + x - y + (butts))
#define multiarg(x, y,           \
  (x + x - y + (butts))
//#include "test.txt"
//#include "test.txt"
#define stringTest "some \"quoted\" string"
stringTest
// comment
#define \
  multiline \
    definition \
    thingy
// comment after multiline

LINE RIGHT BEFORE A MULTILINE USAGE
multiline
LINE RIGHT AFTER A MULTILINE USAGE

LINE RIGHT BEFORE A MULTILINE DEF
#define testjunk(x, y, z) \
    ASDF x x y y z z ASDF
LINE RIGHT AFTER A MULTILINE DEF

testjunk(a, testjunk(u, v, w), (c+d));

#define concat(x, y) x##y
concat(thing1, thing2)

// args error test
concat(thing1)
concat()
concat

stuff

concat(,)







#define foo 1234 // ASF
#undef foo
#define foo
foo is foo
#undef ASDFADSCSCSDC

#define mttest(x) \
    ASDF-x-ASDF

mttest(
    skdlmldsfkv // Hope this comment gets nuked.
    dklfmvldfsk
    );

mttest("this string has a \"quoted\" string and // has a comment inside of it");

mttest("this one has // comment in a
multiline string" // and then a comment
    );
some text

#define errortest \
        #define junk ASDF \
        #define junk ASDF2

errortest


mttest()

#thisisanunknowndirective

#define 1234

#

#define noargs(x, y, z) foobar x y z foobar

noargs(,,)


Stringification test start
#noargs(123,456,768)
Stringification test end

#define stringifyme(x) #x

concat(stringifyme(
shitfuckcrap whatever
"here's some quotes"
noargs(1, 2, 3)
), (butts))


womp



#define IFTEST1
#define IFTEST2

#ifdef IFTEST1
#ifndef IFTEST3
iftest1!
#endif
#else
NOT iftest1!
#endif


----------------------------------------------------------------------
__FILE__
#__FILE__
__LINE__
----------------------------------------------------------------------

#define printLine() do { print(__LINE__, "\n"); } while(0)

printLine();
printLine();
printLine();
printLine();
printLine();
printLine;


#undef foo
#define foo /* this is a c-style comment
with a new line */ asdf
foo

/*
#define stuff inside
*/




#define FOO BAR
#define BAR 123
FOO


#define FILE_LINE_TEST 111
#line FILE_LINE_TEST
#error butts



#line 163

#define IFTEST5 1

#ifdef IFTEST5
asdf IFTEST5
#endif

#ifndef IFTEST5
asdf IFTEST5
#endif


#ifdef IFTEST5
asdf IFTEST5
#else IFTEST5
asdf IFTEST5
#endif
butts

----------------------------------------------------------------------
  Custom error tests
----------------------------------------------------------------------
#error example of a custom error
#ifdef THING_THAT_IS_NOT_DEFINED
#error example of an omitted error
#endif

----------------------------------------------------------------------
  Line tests
----------------------------------------------------------------------
#line 194 "testfile.h"
//#line 190 "this is a bad quoted string

ASDF
// "quoted string without end

----------------------------------------------------------------------
  Include tests
----------------------------------------------------------------------
#include "test2.txt"
#include <test2.txt>
#include "test2.txt
#include <test2.txt
#include "test3.txt" "and another thing"




Testing test4
#error BUTT
#include "test/test4.h"
Done testing test4







#include "filethatdoesntexist.txt"

shit concatenation##test


#define blagh1 asdf##asdf
blagh1



#define ELIFTEST 0

#if ELIFTEST == 0
Case 0
#elif ELIFTEST == 1
Case 1
#elif ELIFTEST == 2
Case 2
#elif ELIFTEST == 3
Case 3
#else
Case else
#endif

__TIME__ __DATE__

